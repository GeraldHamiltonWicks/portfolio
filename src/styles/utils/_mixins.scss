@mixin setFont($fontFamily, $fontWeight, $fontSize) {
  font-family: $fontFamily;
  font-weight: $fontWeight;
  font-size: $fontSize;
}

@mixin getBiggerOnHover($time, $scaleSize) {
  &:hover {
    transition: $time;
    transform: scale($scaleSize);
  }

  &:not(:hover) {
    transition: $time;
    transform: scale(1);
  }
}

@mixin revertBackgroundOnHover($time, $defaultColor, $hoverColor) {
  &:hover {
    transition: $time;
    background-color: $hoverColor;
    border: 1px solid $defaultColor;
    color: $defaultColor;
  }

  &:not(:hover) {
    transition: $time;
    background-color: $defaultColor;
  }
}

@mixin setInnerFadeIn($time) 
{
    -webkit-animation: fadein $time; /* Safari, Chrome and Opera > 12.1 */
    -moz-animation: fadein $time; /* Firefox < 16 */
    -ms-animation: fadein $time; /* Internet Explorer */
    -o-animation: fadein $time; /* Opera < 12.1 */
    animation: fadein $time;
    
    @keyframes fadein 
    {
        from { opacity: 0; }
        to   { opacity: 1; }
    }
        
    /* Firefox < 16 */
    @-moz-keyframes fadein 
    {
        from { opacity: 0; }
        to   { opacity: 1; }
    }
        
    /* Safari, Chrome and Opera > 12.1 */
    @-webkit-keyframes fadein 
    {
        from { opacity: 0; }
        to   { opacity: 1; }
    }
        
    /* Internet Explorer */
    @-ms-keyframes fadein 
    {
        from { opacity: 0; }
        to   { opacity: 1; }
    }
        
        /* Opera < 12.1 */
    @-o-keyframes fadein 
    {
        from { opacity: 0; }
        to   { opacity: 1; }
    }
}

@mixin setTransitionOnClassChange($time)
{
    -webkit-transition: all $time linear;
    -moz-transition: all $time linear;
    -o-transition: all $time linear;
    transition: all $time linear;
}